// components/ActivityBar/ActivityBar.tsx
"use client";
import { useEffect, useState } from "react";
import styles from "./ActivityBar.module.css";

const ActivityBar = () => {
  const [cpuUsage, setCpuUsage] = useState<number>(0);
  const [showCpu, setShowCpu] = useState(false);

  useEffect(() => {
    let interval: NodeJS.Timeout;
    if (showCpu) {
      // Simulate realâ€‘time CPU usage; replace with a real API call as needed.
      interval = setInterval(() => {
        const randomCpu = Math.floor(Math.random() * 100);
        setCpuUsage(randomCpu);
      }, 1000);
    }
    return () => interval && clearInterval(interval);
  }, [showCpu]);

  return (
    <div className={styles.activityBar}>
      <button>
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="24"
          height="24"
          viewBox="0 0 24 24"
          fill="none"
        >
          <path
            d="M13 9V3.5L18.5 9M6 2C4.89 2 4 2.89 4 4V20C4 20.5304 4.21071 21.0391 4.58579 21.4142C4.96086 21.7893 5.46957 22 6 22H18C18.5304 22 19.0391 21.7893 19.4142 21.4142C19.7893 21.0391 20 20.5304 20 20V8L14 2H6Z"
            fill="black"
          />
        </svg>
      </button>

      <button onClick={() => setShowCpu(!showCpu)}>
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="28"
          height="28"
          viewBox="0 0 28 28"
          fill="none"
        >
          <g clipPath="url(#clip0_54986_2)">
            <path
              d="M11.375 10.5C11.1429 10.5 10.9204 10.5922 10.7563 10.7563C10.5922 10.9204 10.5 11.1429 10.5 11.375V16.625C10.5 16.8571 10.5922 17.0796 10.7563 17.2437C10.9204 17.4078 11.1429 17.5 11.375 17.5H16.625C16.8571 17.5 17.0796 17.4078 17.2437 17.2437C17.4078 17.0796 17.5 16.8571 17.5 16.625V11.375C17.5 11.1429 17.4078 10.9204 17.2437 10.7563C17.0796 10.5922 16.8571 10.5 16.625 10.5H11.375Z"
              fill="black"
            />
            <path
              d="M9.625 0.875C9.625 0.642936 9.53281 0.420376 9.36872 0.256282C9.20462 0.0921873 8.98206 0 8.75 0C8.51794 0 8.29538 0.0921873 8.13128 0.256282C7.96719 0.420376 7.875 0.642936 7.875 0.875V3.5C6.71468 3.5 5.60188 3.96094 4.78141 4.78141C3.96094 5.60188 3.5 6.71468 3.5 7.875H0.875C0.642936 7.875 0.420376 7.96719 0.256282 8.13128C0.0921873 8.29538 0 8.51794 0 8.75C0 8.98206 0.0921873 9.20462 0.256282 9.36872C0.420376 9.53281 0.642936 9.625 0.875 9.625H3.5V11.375H0.875C0.642936 11.375 0.420376 11.4672 0.256282 11.6313C0.0921873 11.7954 0 12.0179 0 12.25C0 12.4821 0.0921873 12.7046 0.256282 12.8687C0.420376 13.0328 0.642936 13.125 0.875 13.125H3.5V14.875H0.875C0.642936 14.875 0.420376 14.9672 0.256282 15.1313C0.0921873 15.2954 0 15.5179 0 15.75C0 15.9821 0.0921873 16.2046 0.256282 16.3687C0.420376 16.5328 0.642936 16.625 0.875 16.625H3.5V18.375H0.875C0.642936 18.375 0.420376 18.4672 0.256282 18.6313C0.0921873 18.7954 0 19.0179 0 19.25C0 19.4821 0.0921873 19.7046 0.256282 19.8687C0.420376 20.0328 0.642936 20.125 0.875 20.125H3.5C3.5 21.2853 3.96094 22.3981 4.78141 23.2186C5.60188 24.0391 6.71468 24.5 7.875 24.5V27.125C7.875 27.3571 7.96719 27.5796 8.13128 27.7437C8.29538 27.9078 8.51794 28 8.75 28C8.98206 28 9.20462 27.9078 9.36872 27.7437C9.53281 27.5796 9.625 27.3571 9.625 27.125V24.5H11.375V27.125C11.375 27.3571 11.4672 27.5796 11.6313 27.7437C11.7954 27.9078 12.0179 28 12.25 28C12.4821 28 12.7046 27.9078 12.8687 27.7437C13.0328 27.5796 13.125 27.3571 13.125 27.125V24.5H14.875V27.125C14.875 27.3571 14.9672 27.5796 15.1313 27.7437C15.2954 27.9078 15.5179 28 15.75 28C15.9821 28 16.2046 27.9078 16.3687 27.7437C16.5328 27.5796 16.625 27.3571 16.625 27.125V24.5H18.375V27.125C18.375 27.3571 18.4672 27.5796 18.6313 27.7437C18.7954 27.9078 19.0179 28 19.25 28C19.4821 28 19.7046 27.9078 19.8687 27.7437C20.0328 27.5796 20.125 27.3571 20.125 27.125V24.5C21.2853 24.5 22.3981 24.0391 23.2186 23.2186C24.0391 22.3981 24.5 21.2853 24.5 20.125H27.125C27.3571 20.125 27.5796 20.0328 27.7437 19.8687C27.9078 19.7046 28 19.4821 28 19.25C28 19.0179 27.9078 18.7954 27.7437 18.6313C27.5796 18.4672 27.3571 18.375 27.125 18.375H24.5V16.625H27.125C27.3571 16.625 27.5796 16.5328 27.7437 16.3687C27.9078 16.2046 28 15.9821 28 15.75C28 15.5179 27.9078 15.2954 27.7437 15.1313C27.5796 14.9672 27.3571 14.875 27.125 14.875H24.5V13.125H27.125C27.3571 13.125 27.5796 13.0328 27.7437 12.8687C27.9078 12.7046 28 12.4821 28 12.25C28 12.0179 27.9078 11.7954 27.7437 11.6313C27.5796 11.4672 27.3571 11.375 27.125 11.375H24.5V9.625H27.125C27.3571 9.625 27.5796 9.53281 27.7437 9.36872C27.9078 9.20462 28 8.98206 28 8.75C28 8.51794 27.9078 8.29538 27.7437 8.13128C27.5796 7.96719 27.3571 7.875 27.125 7.875H24.5C24.5 6.71468 24.0391 5.60188 23.2186 4.78141C22.3981 3.96094 21.2853 3.5 20.125 3.5V0.875C20.125 0.642936 20.0328 0.420376 19.8687 0.256282C19.7046 0.0921873 19.4821 0 19.25 0C19.0179 0 18.7954 0.0921873 18.6313 0.256282C18.4672 0.420376 18.375 0.642936 18.375 0.875V3.5H16.625V0.875C16.625 0.642936 16.5328 0.420376 16.3687 0.256282C16.2046 0.0921873 15.9821 0 15.75 0C15.5179 0 15.2954 0.0921873 15.1313 0.256282C14.9672 0.420376 14.875 0.642936 14.875 0.875V3.5H13.125V0.875C13.125 0.642936 13.0328 0.420376 12.8687 0.256282C12.7046 0.0921873 12.4821 0 12.25 0C12.0179 0 11.7954 0.0921873 11.6313 0.256282C11.4672 0.420376 11.375 0.642936 11.375 0.875V3.5H9.625V0.875ZM11.375 8.75H16.625C17.3212 8.75 17.9889 9.02656 18.4812 9.51884C18.9734 10.0111 19.25 10.6788 19.25 11.375V16.625C19.25 17.3212 18.9734 17.9889 18.4812 18.4812C17.9889 18.9734 17.3212 19.25 16.625 19.25H11.375C10.6788 19.25 10.0111 18.9734 9.51884 18.4812C9.02656 17.9889 8.75 17.3212 8.75 16.625V11.375C8.75 10.6788 9.02656 10.0111 9.51884 9.51884C10.0111 9.02656 10.6788 8.75 11.375 8.75Z"
              fill="black"
            />
          </g>
          <defs>
            <clipPath id="clip0_54986_2">
              <rect width="28" height="28" fill="white" />
            </clipPath>
          </defs>
        </svg>
      </button>
      {showCpu && (
        <div className={styles.cpuPanel}>
          <p>CPU Usage: {cpuUsage}%</p>
          <div className={styles.cpuBar}>
            <div className={styles.cpuFill} style={{ width: `${cpuUsage}%` }} />
          </div>
        </div>
      )}
    </div>
  );
};

export default ActivityBar;
